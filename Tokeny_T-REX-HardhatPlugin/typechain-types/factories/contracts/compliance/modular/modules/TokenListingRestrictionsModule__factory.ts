/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../../common";
import type {
  TokenListingRestrictionsModule,
  TokenListingRestrictionsModuleInterface,
} from "../../../../../contracts/compliance/modular/modules/TokenListingRestrictionsModule";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_tokenAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "_userAddress",
        type: "address",
      },
    ],
    name: "IdentityNotFound",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "enum ListingType",
        name: "_listingType",
        type: "uint8",
      },
    ],
    name: "InvalidListingTypeForConfiguration",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_tokenAddress",
        type: "address",
      },
    ],
    name: "TokenAlreadyConfigured",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_tokenAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "_investorAddress",
        type: "address",
      },
    ],
    name: "TokenAlreadyListed",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_tokenAddress",
        type: "address",
      },
    ],
    name: "TokenIsNotConfigured",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_tokenAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "_investorAddress",
        type: "address",
      },
    ],
    name: "TokenIsNotListed",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "previousAdmin",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "newAdmin",
        type: "address",
      },
    ],
    name: "AdminChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "beacon",
        type: "address",
      },
    ],
    name: "BeaconUpgraded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_compliance",
        type: "address",
      },
    ],
    name: "ComplianceBound",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_compliance",
        type: "address",
      },
    ],
    name: "ComplianceUnbound",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "_tokenAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "_investorAddress",
        type: "address",
      },
    ],
    name: "TokenListed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "_tokenAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "enum ListingType",
        name: "_listingType",
        type: "uint8",
      },
    ],
    name: "TokenListingConfigured",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "_tokenAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "_investorAddress",
        type: "address",
      },
    ],
    name: "TokenUnlisted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "implementation",
        type: "address",
      },
    ],
    name: "Upgraded",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "_tokenAddresses",
        type: "address[]",
      },
      {
        internalType: "enum InvestorAddressType",
        name: "_addressType",
        type: "uint8",
      },
    ],
    name: "batchListTokens",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "_tokenAddresses",
        type: "address[]",
      },
      {
        internalType: "enum InvestorAddressType",
        name: "_addressType",
        type: "uint8",
      },
    ],
    name: "batchUnlistTokens",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_compliance",
        type: "address",
      },
    ],
    name: "bindCompliance",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "canComplianceBind",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum ListingType",
        name: "_listingType",
        type: "uint8",
      },
    ],
    name: "configureToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_tokenAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "_investorAddress",
        type: "address",
      },
    ],
    name: "getInvestorListingStatus",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_tokenAddress",
        type: "address",
      },
    ],
    name: "getTokenListingType",
    outputs: [
      {
        internalType: "enum ListingType",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_compliance",
        type: "address",
      },
    ],
    name: "isComplianceBound",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "isPlugAndPlay",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_tokenAddress",
        type: "address",
      },
      {
        internalType: "enum InvestorAddressType",
        name: "_addressType",
        type: "uint8",
      },
    ],
    name: "listToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_from",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
    ],
    name: "moduleBurnAction",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_compliance",
        type: "address",
      },
    ],
    name: "moduleCheck",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
    ],
    name: "moduleMintAction",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_from",
        type: "address",
      },
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
    ],
    name: "moduleTransferAction",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proxiableUUID",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_compliance",
        type: "address",
      },
    ],
    name: "unbindCompliance",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_tokenAddress",
        type: "address",
      },
      {
        internalType: "enum InvestorAddressType",
        name: "_addressType",
        type: "uint8",
      },
    ],
    name: "unlistToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
    ],
    name: "upgradeTo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "upgradeToAndCall",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a06040523060805234801561001457600080fd5b50608051611d8761004c6000396000818161071701528181610757015281816109fa01528181610a3a0152610acd0152611d876000f3fe60806040526004361061014b5760003560e01c80636ce21a48116100b6578063afb0bd6b1161006f578063afb0bd6b14610407578063b94ce67414610427578063bcc2105314610447578063e6f5e80714610468578063f104a8c914610253578063f2fde38b1461047c57600080fd5b80636ce21a481461032f578063715018a6146103755780638129fc1c1461038a5780638d904d311461039f5780638da5cb5b146103bf578063a599bf18146103e757600080fd5b8063372491a211610108578063372491a21461025357806337298f2a146102735780634a932544146102935780634cf4d295146102b35780634f1ef286146102f957806352d1902d1461030c57600080fd5b8063013b7ce4146101505780630694a5fb1461018557806306fdde03146101a75780632cb7e1ec146101f35780633659cfe6146102135780633697b04b14610233575b600080fd5b34801561015c57600080fd5b5061017061016b366004611768565b61049c565b60405190151581526020015b60405180910390f35b34801561019157600080fd5b506101a56101a03660046117bb565b6105a8565b005b3480156101b357600080fd5b50604080518082018252601e81527f546f6b656e4c697374696e675265737472696374696f6e734d6f64756c6500006020820152905161017c91906117fc565b3480156101ff57600080fd5b506101a561020e36600461182f565b6106c8565b34801561021f57600080fd5b506101a561022e3660046117bb565b61070d565b34801561023f57600080fd5b5061017061024e366004611870565b6107ec565b34801561025f57600080fd5b506101a561026e3660046118a9565b61081c565b34801561027f57600080fd5b506101a561028e3660046118e9565b610860565b34801561029f57600080fd5b506101a56102ae3660046117bb565b6108ad565b3480156102bf57600080fd5b506101706102ce3660046117bb565b6001600160a01b03166000908152600080516020611d32833981519152602052604090205460ff1690565b6101a5610307366004611983565b6109f0565b34801561031857600080fd5b50610321610ac0565b60405190815260200161017c565b34801561033b57600080fd5b5061036861034a3660046117bb565b6001600160a01b0316600090815260c9602052604090205460ff1690565b60405161017c9190611a7f565b34801561038157600080fd5b506101a5610b73565b34801561039657600080fd5b506101a5610b87565b3480156103ab57600080fd5b506101a56103ba366004611a8d565b610c97565b3480156103cb57600080fd5b506033546040516001600160a01b03909116815260200161017c565b3480156103f357600080fd5b506101a56104023660046118e9565b610d6d565b34801561041357600080fd5b506101a5610422366004611a8d565b610dba565b34801561043357600080fd5b506101a5610442366004611ac2565b610ee1565b34801561045357600080fd5b506101706104623660046117bb565b50600190565b34801561047457600080fd5b506001610170565b34801561048857600080fd5b506101a56104973660046117bb565b611021565b60006001600160a01b0384166104b4575060016105a0565b60006104bf83611097565b6001600160a01b038116600090815260c9602052604081205491925060ff909116908160028111156104f3576104f3611a47565b03610503576001925050506105a0565b6001600160a01b03808316600090815260ca60209081526040808320938a1683529290529081205460ff168061057557506001600160a01b038316600090815260ca6020526040812090610557858a6110fb565b6001600160a01b0316815260208101919091526040016000205460ff165b9050600282600281111561058b5761058b611a47565b0361059b571592506105a0915050565b925050505b949350505050565b336000908152600080516020611d32833981519152602081905260409091205460ff166105f05760405162461bcd60e51b81526004016105e790611ae3565b60405180910390fd5b600080516020611d328339815191526001600160a01b0383166106555760405162461bcd60e51b815260206004820152601f60248201527f696e76616c696420617267756d656e74202d207a65726f20616464726573730060448201526064016105e7565b336001600160a01b0384161461067d5760405162461bcd60e51b81526004016105e790611b1a565b6001600160a01b038316600081815260208390526040808220805460ff19169055517f408b49d9be1c914c52a0227e18a077e5a892dddf32a26cfa94a5d9708fad77189190a2505050565b336000908152600080516020611d32833981519152602081905260409091205460ff166107075760405162461bcd60e51b81526004016105e790611ae3565b50505050565b6001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001630036107555760405162461bcd60e51b81526004016105e790611b5b565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031661079e600080516020611ceb833981519152546001600160a01b031690565b6001600160a01b0316146107c45760405162461bcd60e51b81526004016105e790611ba7565b6107cd816111d2565b604080516000808252602082019092526107e9918391906111da565b50565b6001600160a01b03808316600090815260ca602090815260408083209385168352929052205460ff165b92915050565b336000908152600080516020611d32833981519152602081905260409091205460ff1661085b5760405162461bcd60e51b81526004016105e790611ae3565b505050565b60005b828110156107075761089b84848381811061088057610880611bf3565b905060200201602081019061089591906117bb565b83610dba565b806108a581611c09565b915050610863565b600080516020611d328339815191526001600160a01b0382166109125760405162461bcd60e51b815260206004820152601f60248201527f696e76616c696420617267756d656e74202d207a65726f20616464726573730060448201526064016105e7565b6001600160a01b03821660009081526020829052604090205460ff161561097b5760405162461bcd60e51b815260206004820152601860248201527f636f6d706c69616e636520616c726561647920626f756e64000000000000000060448201526064016105e7565b336001600160a01b038316146109a35760405162461bcd60e51b81526004016105e790611b1a565b6001600160a01b038216600081815260208390526040808220805460ff19166001179055517f1f7b76c58fb697eb53c6c7c1becb96911516a136e24d7ced386b2355358b75a39190a25050565b6001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000163003610a385760405162461bcd60e51b81526004016105e790611b5b565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316610a81600080516020611ceb833981519152546001600160a01b031690565b6001600160a01b031614610aa75760405162461bcd60e51b81526004016105e790611ba7565b610ab0826111d2565b610abc828260016111da565b5050565b6000306001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614610b605760405162461bcd60e51b815260206004820152603860248201527f555550535570677261646561626c653a206d757374206e6f742062652063616c60448201527f6c6564207468726f7567682064656c656761746563616c6c000000000000000060648201526084016105e7565b50600080516020611ceb83398151915290565b610b7b611345565b610b85600061139f565b565b600054610100900460ff1615808015610ba75750600054600160ff909116105b80610bc15750303b158015610bc1575060005460ff166001145b610c245760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084016105e7565b6000805460ff191660011790558015610c47576000805461ff0019166101001790555b610c4f6113f1565b80156107e9576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a150565b6000610ca4833384611428565b6001600160a01b03808516600090815260ca602090815260408083209385168352929052205490915060ff16610d00576040516308397b2160e21b81526001600160a01b038085166004830152821660248201526044016105e7565b6001600160a01b03838116600081815260ca6020908152604080832094861680845294825291829020805460ff1916905581519283528201929092527f5876cde84e6f82f5a4cdfa52a64969265511b5dd1c5fa44f44b50affba48a5b391015b60405180910390a1505050565b60005b8281101561070757610da8848483818110610d8d57610d8d611bf3565b9050602002016020810190610da291906117bb565b83610c97565b80610db281611c09565b915050610d70565b6001600160a01b038216600090815260c9602052604081205460ff166002811115610de757610de7611a47565b03610e10576040516364d9e14360e11b81526001600160a01b03831660048201526024016105e7565b6000610e1d833384611428565b6001600160a01b03808516600090815260ca602090815260408083209385168352929052205490915060ff1615610e7a5760405163960c006b60e01b81526001600160a01b038085166004830152821660248201526044016105e7565b6001600160a01b03838116600081815260ca6020908152604080832094861680845294825291829020805460ff1916600117905581519283528201929092527f99d2b755eb38920131acb332adf086ea38d15009f223c21f3aa978d6ab2347869101610d60565b336000908152600080516020611d32833981519152602081905260409091205460ff16610f205760405162461bcd60e51b81526004016105e790611ae3565b6000610f2b33611097565b90506000836002811115610f4157610f41611a47565b03610f605782604051627d61b960e91b81526004016105e79190611a7f565b6001600160a01b038116600090815260c9602052604081205460ff166002811115610f8d57610f8d611a47565b14610fb6576040516354d67cef60e01b81526001600160a01b03821660048201526024016105e7565b6001600160a01b038116600090815260c960205260409020805484919060ff19166001836002811115610feb57610feb611a47565b02179055507f19b790254812cc22008ac5e91a508888a4c781c009f9e61bb2329251515cf5d18184604051610d60929190611c30565b611029611345565b6001600160a01b03811661108e5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016105e7565b6107e98161139f565b6000816001600160a01b0316636a3edf286040518163ffffffff1660e01b8152600401602060405180830381865afa1580156110d7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108169190611c4d565b6000826001600160a01b031663134e18f46040518163ffffffff1660e01b8152600401602060405180830381865afa15801561113b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061115f9190611c4d565b604051633c3ad79560e21b81526001600160a01b038481166004830152919091169063f0eb5e5490602401602060405180830381865afa1580156111a7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111cb9190611c4d565b9392505050565b6107e9611345565b7f4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd91435460ff161561120d5761085b83611491565b826001600160a01b03166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa925050508015611267575060408051601f3d908101601f1916820190925261126491810190611c6a565b60015b6112ca5760405162461bcd60e51b815260206004820152602e60248201527f45524331393637557067726164653a206e657720696d706c656d656e7461746960448201526d6f6e206973206e6f74205555505360901b60648201526084016105e7565b600080516020611ceb83398151915281146113395760405162461bcd60e51b815260206004820152602960248201527f45524331393637557067726164653a20756e737570706f727465642070726f786044820152681a58589b195555525160ba1b60648201526084016105e7565b5061085b83838361152d565b6033546001600160a01b03163314610b855760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016105e7565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600054610100900460ff166114185760405162461bcd60e51b81526004016105e790611c83565b611420611552565b610b85611581565b60008082600181111561143d5761143d611a47565b036114495750816111cb565b600061145585856110fb565b90506001600160a01b0381166105a057604051631003b1a960e31b81526001600160a01b038087166004830152851660248201526044016105e7565b6001600160a01b0381163b6114fe5760405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201526c1bdd08184818dbdb9d1c9858dd609a1b60648201526084016105e7565b600080516020611ceb83398151915280546001600160a01b0319166001600160a01b0392909216919091179055565b611536836115a8565b6000825111806115435750805b1561085b5761070783836115e8565b600054610100900460ff166115795760405162461bcd60e51b81526004016105e790611c83565b610b8561160d565b600054610100900460ff16610b855760405162461bcd60e51b81526004016105e790611c83565b6115b181611491565b6040516001600160a01b038216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b60606111cb8383604051806060016040528060278152602001611d0b6027913961163d565b600054610100900460ff166116345760405162461bcd60e51b81526004016105e790611c83565b610b853361139f565b6060600080856001600160a01b03168560405161165a9190611cce565b600060405180830381855af49150503d8060008114611695576040519150601f19603f3d011682016040523d82523d6000602084013e61169a565b606091505b50915091506116ab868383876116b5565b9695505050505050565b6060831561172457825160000361171d576001600160a01b0385163b61171d5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016105e7565b50816105a0565b6105a083838151156117395781518083602001fd5b8060405162461bcd60e51b81526004016105e791906117fc565b6001600160a01b03811681146107e957600080fd5b6000806000806080858703121561177e57600080fd5b843561178981611753565b9350602085013561179981611753565b92506040850135915060608501356117b081611753565b939692955090935050565b6000602082840312156117cd57600080fd5b81356111cb81611753565b60005b838110156117f35781810151838201526020016117db565b50506000910152565b602081526000825180602084015261181b8160408501602087016117d8565b601f01601f19169190910160400192915050565b60008060006060848603121561184457600080fd5b833561184f81611753565b9250602084013561185f81611753565b929592945050506040919091013590565b6000806040838503121561188357600080fd5b823561188e81611753565b9150602083013561189e81611753565b809150509250929050565b600080604083850312156118bc57600080fd5b82356118c781611753565b946020939093013593505050565b8035600281106118e457600080fd5b919050565b6000806000604084860312156118fe57600080fd5b833567ffffffffffffffff8082111561191657600080fd5b818601915086601f83011261192a57600080fd5b81358181111561193957600080fd5b8760208260051b850101111561194e57600080fd5b60209283019550935061196491860190506118d5565b90509250925092565b634e487b7160e01b600052604160045260246000fd5b6000806040838503121561199657600080fd5b82356119a181611753565b9150602083013567ffffffffffffffff808211156119be57600080fd5b818501915085601f8301126119d257600080fd5b8135818111156119e4576119e461196d565b604051601f8201601f19908116603f01168101908382118183101715611a0c57611a0c61196d565b81604052828152886020848701011115611a2557600080fd5b8260208601602083013760006020848301015280955050505050509250929050565b634e487b7160e01b600052602160045260246000fd5b60038110611a7b57634e487b7160e01b600052602160045260246000fd5b9052565b602081016108168284611a5d565b60008060408385031215611aa057600080fd5b8235611aab81611753565b9150611ab9602084016118d5565b90509250929050565b600060208284031215611ad457600080fd5b8135600381106111cb57600080fd5b6020808252601e908201527f6f6e6c7920626f756e6420636f6d706c69616e63652063616e2063616c6c0000604082015260600190565b60208082526021908201527f6f6e6c7920636f6d706c69616e636520636f6e74726163742063616e2063616c6040820152601b60fa1b606082015260800190565b6020808252602c908201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060408201526b19195b1959d85d1958d85b1b60a21b606082015260800190565b6020808252602c908201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060408201526b6163746976652070726f787960a01b606082015260800190565b634e487b7160e01b600052603260045260246000fd5b600060018201611c2957634e487b7160e01b600052601160045260246000fd5b5060010190565b6001600160a01b0383168152604081016111cb6020830184611a5d565b600060208284031215611c5f57600080fd5b81516111cb81611753565b600060208284031215611c7c57600080fd5b5051919050565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b60008251611ce08184602087016117d8565b919091019291505056fe360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564f6cc97de1266c180cd39f3b311632644143ce7873d2927755382ad4b39e8ae00a2646970667358221220fcea0ba73c2f3b54beceae9745feecaa8ac528cc5240953275c214cc73d7046b64736f6c63430008110033";

type TokenListingRestrictionsModuleConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TokenListingRestrictionsModuleConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TokenListingRestrictionsModule__factory extends ContractFactory {
  constructor(...args: TokenListingRestrictionsModuleConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<TokenListingRestrictionsModule> {
    return super.deploy(
      overrides || {}
    ) as Promise<TokenListingRestrictionsModule>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): TokenListingRestrictionsModule {
    return super.attach(address) as TokenListingRestrictionsModule;
  }
  override connect(signer: Signer): TokenListingRestrictionsModule__factory {
    return super.connect(signer) as TokenListingRestrictionsModule__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TokenListingRestrictionsModuleInterface {
    return new utils.Interface(_abi) as TokenListingRestrictionsModuleInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TokenListingRestrictionsModule {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as TokenListingRestrictionsModule;
  }
}
