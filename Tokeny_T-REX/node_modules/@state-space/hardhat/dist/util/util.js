"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.withAuth = withAuth;
exports.checkVersion = checkVersion;
exports.warn = warn;
exports.error = error;
const child_process_1 = require("child_process");
const testgen_1 = require("../testgen");
const auth_1 = require("./auth");
async function withAuth(fn, onAuth, spinner) {
    let retries = 0;
    while (retries < 6) {
        retries += 1;
        try {
            return await fn();
        }
        catch (e) {
            if (e instanceof testgen_1.TestGenAuthRetryError) {
                const creds = await (0, auth_1.authenticate)(spinner);
                (0, auth_1.saveCredentials)(creds);
                await onAuth(creds);
                continue;
            }
            throw e;
        }
    }
    throw new testgen_1.TestGenAuthRetryError("authentication failed - try again");
}
async function checkVersion() {
    return new Promise(resolve => {
        const timer = setTimeout(() => resolve(), 5000);
        (0, child_process_1.exec)("npm outdated @state-space/hardhat --json", { encoding: "utf8" }, (err, stdout) => {
            if (err) {
                try {
                    const resp = JSON.parse(stdout);
                    if ("@state-space/hardhat" in resp) {
                        const versions = resp["@state-space/hardhat"];
                        if (versions.current != versions.latest && !versions.current.includes("dev")) {
                            console.log(`A new version is available! ` +
                                versions.latest +
                                `\nRun npm install @state-space/hardhat to update`);
                        }
                    }
                }
                catch (_e) { }
            }
            clearTimeout(timer);
            resolve();
        });
    });
}
const LogPrefix = "State Space";
function warn(args) {
    console.warn(LogPrefix, "-", "warn:", ...args);
}
function error(args) {
    console.warn(LogPrefix, "-", "error:", ...args);
}
//# sourceMappingURL=util.js.map