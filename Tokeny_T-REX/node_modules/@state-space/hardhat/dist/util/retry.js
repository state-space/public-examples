"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.retryNetworkErrors = retryNetworkErrors;
const testgen_1 = require("../testgen");
const maxRetries = 8;
const retryWarningThreshold = 3;
const networkErrorCodes = [
    "ECONNREFUSED",
    "EPIPE",
    "ENETUNREACH",
    "ENOTFOUND",
    "ECONNRESET",
];
async function retryNetworkErrors(fn, spinner) {
    let retries = 0;
    while (retries < maxRetries) {
        retries += 1;
        try {
            return await fn();
        }
        catch (e) {
            let isConnectionError = false;
            // todo detect network issues
            if (isConnectionError) {
                if (retries >= retryWarningThreshold) {
                    spinner.text = "network issue, retrying...";
                    spinner.color = "yellow";
                }
                await sleep(2 ^ ((retries + Math.random() * retries) * 1000));
                continue;
            }
            throw e;
        }
    }
    throw new testgen_1.TestGenError("network error - could not reach State Space servers");
}
async function sleep(ms) {
    await new Promise((resolve) => setTimeout(resolve, ms));
}
//# sourceMappingURL=retry.js.map