import type { HardhatRuntimeEnvironment } from "hardhat/types";
import { type Account, type SolcOutput } from "./testgen";
export type StateSpaceConfig = {
    team: string;
    project: string;
    deployments?: Record<string, DeploymentFn>;
    artifacts: any[];
};
export type DeploymentFn = (hre: HardhatRuntimeEnvironment) => Promise<DeploymentFnResult | undefined | undefined> | DeploymentFnResult | undefined | undefined;
export type DeploymentFnResult = {
    accountNames?: Record<string, Account>;
};
export declare const getSolcOutputs: () => Promise<SolcOutput[]>;
export declare function defaultProjectName(): string;
export declare function env(name: string, defaultValue?: string): string;
export declare const appConfig: () => {
    api: string;
    "auth0.domain": string;
    "auth0.audience": string;
    "auth0.clientId": string;
    credentialsPath: string;
};
//# sourceMappingURL=config.d.ts.map